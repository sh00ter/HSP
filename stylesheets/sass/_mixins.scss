// BOX SIZING
@mixin box-sizing($type: border-box) {
    -webkit-box-sizing:   $type;
    -moz-box-sizing:      $type;
    box-sizing:           $type;
}

// TRANSITION
@mixin transition($what: all, $length: .3s) {
    -moz-transition:    $what $length;
    -o-transition:      $what $length;
    -webkit-transition: $what $length;
    -ms-transition:     $what $length;
    transition:         $what $length;
}

// Transform mixin
@mixin transform($prop) {
  -webkit-transform: $prop;
  -moz-transform: $prop;
  -o-transform: $prop;
  -ms-transform: $prop;
  transform: $prop;
}

// Selection Color
@mixin selection($bgColor, $fontColor) {
    ::-moz-selection { background: $bgColor; color: $fontColor; }
    ::selection { background: $bgColor; color: $fontColor; }
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem($property, $values) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value * .1}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  }

  #{$property}: $pxValues;
  #{$property}: $remValues;
}

@mixin media($breakpoint) {
  @if $breakpoint == small {
    @media (max-width: 480px) {
      @content;
    }
  }
  @if $breakpoint == medium {
    @media (max-width: 1024px) {
      @content;
    }
  }
  @if $breakpoint == large {
    @media (min-width: 1240px) {
      @content;
    }
  }
}

@mixin responsive-prop($prop, $args... ) {
  @each $bp in $args {
    @if length($bp) > 1 {
      $size  : nth($bp, 1);
      $value : nth($bp, 2);
      @include media($size);
      @if $value != "no" {
        #{$prop}: $value;
      }
    } @else {
      @if $value != "no" {
        #{$prop}: $bp;
      }
    }
  }
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation:    $animations;
  -o-animation:      $animations;
  animation:         $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

// Display table-cell mixin
@mixin display-table-cell(){
  clear: none;
  float: none;
  display: table-cell;
  vertical-align: top;
}
